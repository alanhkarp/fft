1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21                                           PAGE:    1
0REQUESTED OPTIONS (EXECUTE): ignore sdump opt(3) ad(none) gostmt flag(w) source vector(report(xlist))
0REQUESTED OPTIONS (PROCESS): DIRECTIVE(' DIR:')
0OPTIONS IN EFFECT: NOLIST NOMAP NOXREF GOSTMT NODECK SOURCE NOTERM OBJECT FIXED TRMFLG NOSRCFLG NOSYM RENT SDUMP
                    NOSXM VECTOR IL(DIM) NOTEST NODC NOICA DIRECTIVE NODBCS NOSAA NOPARALLEL NOSAVE NOPROF TABS
                    OPT(3) LANGLVL(77) NOFIPS FLAG(W) AUTODBL(00000) LINECOUNT(60) CHARLEN(500)
              TABS: 1 9 17 25 33 41 49 57 65 73
            VECTOR: NOIVA INTRINSIC REDUCTION SIZE(ANY) REPORT(XLIST)
0 IF DO   ISN  LINE INC *....*...1.........2.........3.........4.........5.........6.........7.*.......8
0                     [BEGIN INPUT FILE "fftl.f"
                  2     c fftl => Like ffta but use radix 2 and 4
                  3     c
            1     4           subroutine fftl ( d, lens, ndim, coeff, irev )
                  5     c
                  6     c d       = array to be transformed of length product lens
                  7     c lens    = log2 length of each dimension
                  8     c ndim    = number of dimensions
                  9     c coeff   = array of length at least (max 2**lens)/2
                 10     c irev    = integer work array of length at least max 2**lens
                 11     c
            2    12           parameter ( nfmax = 50, npr = 2 )
            3    13           complex d(0:*), temp, t0, t1, t2, t3, d0, d1, d2, d3
            4    14           complex coeff(0:*)
            5    15           dimension lens(ndim), irev(0:*), ifac(nfmax), ipr(npr)
            6    16           data ipr/4, 2/
                 17     c
                 18     c Find total length, max length, sum of log of dimension,
                 19     c and largest log dimension
                 20     c
            7    21           lentotl = 0
            8    22           maxlenl = 0
            9    23           do i = 1, ndim
      1    10    24              lentotl = lentotl + lens(i)
      1    11    25              maxlenl = max(maxlenl,lens(i))
      1    12    26           enddo
           13    27           lentot = 2**lentotl
           14    28           maxlen = 2**maxlenl
                 29     c
                 30     c Main loop over dimensions
                 31     c
           15    32           lip = 0
           16    33           lop = lentot
           17    34           do idim = 1, ndim
      1    18    35              lensidim = 2**lens(idim)
      1    19    36              ls = lip
      1    20    37              lip = lop
      1    21    38              lop = ls
                 39     c
                 40     c Build bit reversal index vector and array of coefficients
                 41     c
      1    22    42              call factor ( lensidim, ifac, nfac, nfmax, ipr, npr )
      1    23    43              call reorderm ( lensidim, irev, ifac, nfac )
      1    24    44              call coeffs ( lensidim, coeff )
                 45     c
                 46     c Copy d with bit reversal for first stage of FFT
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    2
0 IF DO   ISN  LINE INC *....*...1.........2.........3.........4.........5.........6.........7.*.......8
0                47     c
      1    25    48              mask1 = lensidim - 1
      1    26    49              mask2 = not(lensidim-1)
                 50     c dir: ignore recrdeps(d)
      1    27    51              do i = 0, lentot - 1
      2    28    52                 iseg = iand(i,mask2)
      2    29    53                 ir = irev(iand(i,mask1))
      2    30    54                 d(i+lip) = d(ir+lop+iseg)
      2    31    55              enddo
                 56     c
                 57     c Loop over array doing FFT for rest of stages
                 58     c
      1    32    59              if1 = lensidim
      1    33    60              if2 = lentot
      1    34    61              do ibfly = 1, nfac
      2    35    62                 ls = lip
      2    36    63                 lip = lop
      2    37    64                 lop = ls
      2    38    65                 ipfac = ifac(ibfly)
      2    39    66                 lopfac = lentot/ipfac
                 67     c
                 68     c Now compute this butterfly
                 69     c
      2    40    70                 if1 = if1/ipfac
      2    41    71                 if2 = if2/ipfac
                 72     c
                 73     c Use special cases since all factors are powers of 2
                 74     c
      2    42    75                 if ( ipfac .eq. 2 ) then
                 76     c
                 77     c Radix 2
                 78     c
                 79     c dir: ignore recrdeps(d)
   1  2    43    80                    do i = 0, lopfac - 1
   1  3    44    81                       iw = if1*(i/if2)
   1  3    45    82                       temp = coeff(iw)*d(2*i+lop+1)
   1  3    46    83                       d(i+lip       ) = d(2*i+lop)+temp
   1  3    47    84                       d(i+lip+lopfac) = d(2*i+lop)-temp
   1  3    48    85                    enddo
   1  2    49    86                 else if ( ipfac .eq. 4 ) then
                 87     c
                 88     c Radix 4
                 89     c
                 90     c dir: ignore recrdeps(d)
   1  2    50    91                    do i = 0, lopfac - 1
   1  3    51    92                       iw1 =   if1*int(i/if2)
   1  3    52    93                       iw2 = 2*if1*int(i/if2)
   1  3    53    94                       iw3 = 3*if1*int(i/if2)
   1  3    54    95                       t0 =              d(4*i+lop  )
   1  3    55    96                       t2 = coeff(iw1) * d(4*i+lop+1)
   1  3    56    97                       t1 = coeff(iw2) * d(4*i+lop+2)
   1  3    57    98                       t3 = coeff(iw3) * d(4*i+lop+3)
   1  3    58    99                       d0 = t0 + t1
   1  3    59   100                       d1 = t2 + t3
   1  3    60   101                       d2 = t0 - t1
   1  3    61   102                       d3 = t2 - t3
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    3
0 IF DO   ISN  LINE INC *....*...1.........2.........3.........4.........5.........6.........7.*.......8
0  1  3    62   103                       d3 = cmplx(-imag(d3),real(d3))
   1  3    63   104                       d(i+lip         ) = d0 + d1
   1  3    64   105                       d(i+lip+  lopfac) = d2 + d3
   1  3    65   106                       d(i+lip+2*lopfac) = d0 - d1
   1  3    66   107                       d(i+lip+3*lopfac) = d2 - d3
   1  3    67   108                    enddo
   1  2    68   109                 else
   1  2    69   110                    stop 'Radix not 2 or 4.'
   1  2    70   111                 endif
      2    71   112              enddo
      1    72   113           enddo
                114     c
                115     c If result is in bottom half of array, copy to top half
                116     c
           73   117           if ( lip .ne. 0 ) then
                118     c dir: ignore recrdeps(d)
   1       74   119              do i = 0, lentot - 1
   1  1    75   120                 d(i) = d(i+lip)
   1  1    76   121              enddo
   1       77   122           endif
                123     c
                124     c Done
                125     c
           78   126           end
                      ]END INPUT FILE "fftl.f"
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    4
0                                        REPORT(XLIST)  VECTORIZATION ANALYSIS
+                                        _____________  _____________ ________
0 ISN FLAG NESTING *....*...1.........2.........3.........4.........5.........6.........7.*.......8 MESSAGES
+ ___ ____ _______                                                                                  ________
0                  c fftl => Like ffta but use radix 2 and 4
                   c
 0001                    subroutine fftl ( d, lens, ndim, coeff, irev )
                   c
                   c d       = array to be transformed of length product lens
                   c lens    = log2 length of each dimension
                   c ndim    = number of dimensions
                   c coeff   = array of length at least (max 2**lens)/2
                   c irev    = integer work array of length at least max 2**lens
                   c
 0002                    parameter ( nfmax = 50, npr = 2 )
 0003                    complex d(0:*), temp, t0, t1, t2, t3, d0, d1, d2, d3
 0004                    complex coeff(0:*)
 0005                    dimension lens(ndim), irev(0:*), ifac(nfmax), ipr(npr)
 0006                    data ipr/4, 2/
                   c
                   c Find total length, max length, sum of log of dimension,
                   c and largest log dimension
                   c
 0007                    lentotl = 0
 0008                    maxlenl = 0
 0009 VECT +-------      do i = 1, ndim
 0010      |_______         lentotl = lentotl + lens(i)                                             VECTOR SUM REDUCTION        -50

 0009 RECR +-------      do i = 1, ndim                                                             DEFINITE RECURRENCE         -22
 0011      |_______         maxlenl = max(maxlenl,lens(i))                                          SCALAR DEFINED BEFORE LOOP  -26
 0013                    lentot = 2**lentotl
 0014                    maxlen = 2**maxlenl
                   c
                   c Main loop over dimensions
                   c
 0015                    lip = 0
 0016                    lop = lentot
 0017 UNAN               do idim = 1, ndim                                                          USER FUNCTION OR SUBROUTINE -14
 0018                       lensidim = 2**lens(idim)
 0019                       ls = lip
 0020                       lip = lop
 0021                       lop = ls
                   c
                   c Build bit reversal index vector and array of coefficients
                   c
 0022                       call factor ( lensidim, ifac, nfac, nfmax, ipr, npr )
 0023                       call reorderm ( lensidim, irev, ifac, nfac )
 0024                       call coeffs ( lensidim, coeff )
                   c
                   c Copy d with bit reversal for first stage of FFT
                   c
 0025                       mask1 = lensidim - 1
 0026                       mask2 = not(lensidim-1)
                   c dir: ignore recrdeps(d)
 0027 VECT +-------         do i = 0, lentot - 1                                                    "IGNORE RECRDEPS" USED      -72
 0028      |                   iseg = iand(i,mask2)
 0029      |                   ir = irev(iand(i,mask1))
 0030      |_______            d(i+lip) = d(ir+lop+iseg)                                            POTENTIAL RECRDEP ELIMINATED-77
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    5
0                                        REPORT(XLIST)  VECTORIZATION ANALYSIS
+                                        _____________  _____________ ________
0 ISN FLAG NESTING *....*...1.........2.........3.........4.........5.........6.........7.*.......8 MESSAGES
+ ___ ____ _______                                                                                  ________
0                  c
                   c Loop over array doing FFT for rest of stages
                   c
 0032                       if1 = lensidim
 0033                       if2 = lentot
 0034 UNAN                  do ibfly = 1, nfac                                                      UNANALYZABLE STOP OR RETURN -07
 0035                          ls = lip
 0036                          lip = lop
 0037                          lop = ls
 0038                          ipfac = ifac(ibfly)
 0039                          lopfac = lentot/ipfac
                   c
                   c Now compute this butterfly
                   c
 0040                          if1 = if1/ipfac
 0041                          if2 = if2/ipfac
                   c
                   c Use special cases since all factors are powers of 2
                   c
 0042                          if ( ipfac .eq. 2 ) then
                   c
                   c Radix 2
                   c
                   c dir: ignore recrdeps(d)
 0043 VECT +-------               do i = 0, lopfac - 1                                              "IGNORE RECRDEPS" USED      -72
 0044      |                         iw = if1*(i/if2)
 0045      |                         temp = coeff(iw)*d(2*i+lop+1)                                  POTENTIAL RECRDEP ELIMINATED-77
 0046      |                         d(i+lip       ) = d(2*i+lop)+temp                              POTENTIAL RECRDEP ELIMINATED-77
 0047      |_______                  d(i+lip+lopfac) = d(2*i+lop)-temp                              POTENTIAL RECRDEP ELIMINATED-77
 0049                          else if ( ipfac .eq. 4 ) then
                   c
                   c Radix 4
                   c
                   c dir: ignore recrdeps(d)
 0050 VECT +-------               do i = 0, lopfac - 1                                              "IGNORE RECRDEPS" USED      -72
 0051      |                         iw1 =   if1*int(i/if2)
 0052      |                         iw2 = 2*if1*int(i/if2)
 0053      |                         iw3 = 3*if1*int(i/if2)
 0054      |                         t0 =              d(4*i+lop  )                                 POTENTIAL RECRDEP ELIMINATED-77
 0055      |                         t2 = coeff(iw1) * d(4*i+lop+1)                                 POTENTIAL RECRDEP ELIMINATED-77
 0056      |                         t1 = coeff(iw2) * d(4*i+lop+2)                                 POTENTIAL RECRDEP ELIMINATED-77
 0057      |                         t3 = coeff(iw3) * d(4*i+lop+3)                                 POTENTIAL RECRDEP ELIMINATED-77
 0058      |                         d0 = t0 + t1
 0059      |                         d1 = t2 + t3
 0060      |                         d2 = t0 - t1
 0061      |                         d3 = t2 - t3
 0062      |                         d3 = cmplx(-imag(d3),real(d3))
 0063      |                         d(i+lip         ) = d0 + d1                                    POTENTIAL RECRDEP ELIMINATED-77
 0064      |                         d(i+lip+  lopfac) = d2 + d3                                    POTENTIAL RECRDEP ELIMINATED-77
 0065      |                         d(i+lip+2*lopfac) = d0 - d1                                    POTENTIAL RECRDEP ELIMINATED-77
 0066      |_______                  d(i+lip+3*lopfac) = d2 - d3                                    POTENTIAL RECRDEP ELIMINATED-77
 0068                          else
 0069                             stop 'Radix not 2 or 4.'
 0070                          endif
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    6
0                                        REPORT(XLIST)  VECTORIZATION ANALYSIS
+                                        _____________  _____________ ________
0 ISN FLAG NESTING *....*...1.........2.........3.........4.........5.........6.........7.*.......8 MESSAGES
+ ___ ____ _______                                                                                  ________
00071                       enddo
 0072                    enddo
                   c
                   c If result is in bottom half of array, copy to top half
                   c
 0073                    if ( lip .ne. 0 ) then
                   c dir: ignore recrdeps(d)
 0074 VECT +-------         do i = 0, lentot - 1                                                    "IGNORE RECRDEPS" USED      -72
 0075      |_______            d(i) = d(i+lip)                                                      POTENTIAL RECRDEP ELIMINATED-77
 0077                    endif
                   c
                   c Done
                   c
 0078                    end
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    7
0NUMBER    ISN        FLAG  VS FORTRAN VECTOR REPORT MESSAGES
+______    ___        ____  __ _______ ______ ______ ________
0ILX0122I  0009       RECR  THIS LOOP COULD NOT BE VECTORIZED BECAUSE OF A DEFINITE RECURRENCE INVOLVING THE VARIABLE(S) "MAXLENL".

0ILX0150W  0010       VECT  VECTORIZATION WAS DONE USING SUM OR PRODUCT REDUCTION ON THE VARIABLE(S) "LENTOTL". RESULTS MAY DIFFER
                            FROM SCALAR CODE.
0ILX0126I  0011       RECR  THE SCALAR VARIABLE(S) "MAXLENL" ARE NOT ELIGIBLE FOR EXPANSION BECAUSE THEY MAY USE VALUES THAT WERE
                            SET BEFORE THE EXECUTION OF THE CONTAINING LOOP AND THEIR VALUES MAY BE USED AFTER THE EXECUTION OF THE
                            CONTAINING LOOP.
0ILX0114I  0017       UNAN  THE USER FUNCTION(S) OR SUBROUTINE(S) "COEFFS" AT ISN "24", "REORDERM" AT ISN "23", AND "FACTOR" AT ISN
                            "22" ARE NOT ANALYZABLE.
0ILX0172I  0027       VDIR  AN "IGNORE RECRDEPS" DIRECTIVE HAS BEEN SPECIFIED FOR THIS LOOP.
0ILX0177W  0030       VDIR  POTENTIAL BACKWARD DEPENDENCE(S) INVOLVING THE ARRAY(S) "D" HAVE BEEN IGNORED BECAUSE OF AN "IGNORE
                            RECRDEPS" DIRECTIVE APPLIED TO THE LOOP(S) AT NESTING LEVEL(S) "2".
0ILX0107I  0034       UNAN  STOP OR RETURN STATEMENTS AT ISN(S) "69" ARE NOT ANALYZABLE BECAUSE THIS LOOP CONTAINS A NESTED LOOP.
0ILX0172I  0043       VDIR  AN "IGNORE RECRDEPS" DIRECTIVE HAS BEEN SPECIFIED FOR THIS LOOP.
0ILX0177W  0045-0047  VDIR  POTENTIAL BACKWARD DEPENDENCE(S) INVOLVING THE ARRAY(S) "D" HAVE BEEN IGNORED BECAUSE OF AN "IGNORE
                            RECRDEPS" DIRECTIVE APPLIED TO THE LOOP(S) AT NESTING LEVEL(S) "3".
0ILX0172I  0050       VDIR  AN "IGNORE RECRDEPS" DIRECTIVE HAS BEEN SPECIFIED FOR THIS LOOP.
0ILX0177W  0054-0057  VDIR  POTENTIAL BACKWARD DEPENDENCE(S) INVOLVING THE ARRAY(S) "D" HAVE BEEN IGNORED BECAUSE OF AN "IGNORE
                            RECRDEPS" DIRECTIVE APPLIED TO THE LOOP(S) AT NESTING LEVEL(S) "3".
0ILX0177W  0063-0066  VDIR  POTENTIAL BACKWARD DEPENDENCE(S) INVOLVING THE ARRAY(S) "D" HAVE BEEN IGNORED BECAUSE OF AN "IGNORE
                            RECRDEPS" DIRECTIVE APPLIED TO THE LOOP(S) AT NESTING LEVEL(S) "3".
0ILX0172I  0074       VDIR  AN "IGNORE RECRDEPS" DIRECTIVE HAS BEEN SPECIFIED FOR THIS LOOP.
0ILX0177W  0075       VDIR  POTENTIAL BACKWARD DEPENDENCE(S) INVOLVING THE ARRAY(S) "D" HAVE BEEN IGNORED BECAUSE OF AN "IGNORE
                            RECRDEPS" DIRECTIVE APPLIED TO THE LOOP(S) AT NESTING LEVEL(S) "1".
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    8
0              TABLE OF DEPENDENCES ELIMINATED BY IGNORE DIRECTIVES
+              _____ __ ___________ __________ __ ______ __________
0DIRECTIVE    ARRAY NAME   FROM   TO     DEP     AFFECTED        LOOP
   TYPE      (EQUIV NAME)  ISN    ISN    TYPE    DIMENSIONS      VARIABLES
+_________   ____________  _____  _____  ______  ______________  _________
0BACKDEP      D               30     30  TRUE    1               I
0BACKDEP      D               46     46  TRUE    1               I
 BACKDEP      D               46     45  TRUE    1               I
 BACKDEP      D               47     47  TRUE    1               I
 BACKDEP      D               47     46  OUTPUT  1               I
 BACKDEP      D               47     46  TRUE    1               I
 BACKDEP      D               47     45  TRUE    1               I
 BACKDEP      D               47     46  ANTI    1               I
0BACKDEP      D               63     57  TRUE    1               I
 BACKDEP      D               63     56  TRUE    1               I
 BACKDEP      D               63     55  TRUE    1               I
 BACKDEP      D               63     54  TRUE    1               I
 BACKDEP      D               64     63  OUTPUT  1               I
 BACKDEP      D               64     57  TRUE    1               I
 BACKDEP      D               64     56  TRUE    1               I
 BACKDEP      D               64     55  TRUE    1               I
 BACKDEP      D               64     54  TRUE    1               I
 BACKDEP      D               65     64  OUTPUT  1               I
 BACKDEP      D               65     63  OUTPUT  1               I
 BACKDEP      D               65     57  TRUE    1               I
 BACKDEP      D               65     56  TRUE    1               I
 BACKDEP      D               65     55  TRUE    1               I
 BACKDEP      D               65     54  TRUE    1               I
 BACKDEP      D               66     65  OUTPUT  1               I
 BACKDEP      D               66     64  OUTPUT  1               I
 BACKDEP      D               66     63  OUTPUT  1               I
 BACKDEP      D               66     57  TRUE    1               I
 BACKDEP      D               66     56  TRUE    1               I
 BACKDEP      D               66     55  TRUE    1               I
 BACKDEP      D               66     54  TRUE    1               I
0BACKDEP      D               75     75  TRUE    1               I
1LEVEL 2.5.D (fvs w/dbx)    910808.911115.xa          JAN 31, 1992  09:34:21  NAME:FFTL                                PAGE:    9
0*STATISTICS*   SOURCE STATEMENTS: 78, PROGRAM SIZE: 2876 BYTES, PROGRAM NAME: FFTL,   PAGE:    1
 *STATISTICS*   PROGRAM SIZE DETAIL: 2876 = (T.2588  D.288  B.0), S.776
 *STATISTICS*   4 DIAGNOSTICS GENERATED. HIGHEST SEVERITY CODE IS 0.
0**FFTL** END OF COMPILATION 1 ******
